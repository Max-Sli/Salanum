@echo off
setlocal enabledelayedexpansion

REM Salanum - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è Windows
echo üîí Salanum - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è Windows
echo ================================================

REM –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
:print_status
echo [INFO] %~1
goto :eof

:print_success
echo [SUCCESS] %~1
goto :eof

:print_warning
echo [WARNING] %~1
goto :eof

:print_error
echo [ERROR] %~1
goto :eof

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
:check_dependencies
call :print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
node --version >nul 2>&1
if %errorlevel% neq 0 (
    call :print_error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+ —Å https://nodejs.org/"
    exit /b 1
) else (
    for /f "tokens=*" %%i in ('node --version') do set NODE_VERSION=%%i
    call :print_success "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: !NODE_VERSION!"
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
npm --version >nul 2>&1
if %errorlevel% neq 0 (
    call :print_error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit /b 1
) else (
    for /f "tokens=*" %%i in ('npm --version') do set NPM_VERSION=%%i
    call :print_success "npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: !NPM_VERSION!"
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
git --version >nul 2>&1
if %errorlevel% neq 0 (
    call :print_error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git —Å https://git-scm.com/"
    exit /b 1
) else (
    for /f "tokens=*" %%i in ('git --version') do set GIT_VERSION=%%i
    call :print_success "Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: !GIT_VERSION!"
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
mongod --version >nul 2>&1
if %errorlevel% neq 0 (
    call :print_warning "MongoDB –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
) else (
    call :print_success "MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
docker --version >nul 2>&1
if %errorlevel% neq 0 (
    call :print_warning "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    set DOCKER_AVAILABLE=false
) else (
    call :print_success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    set DOCKER_AVAILABLE=true
)

goto :eof

REM –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
:install_dependencies
call :print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

REM –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
call :print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
call npm install
if %errorlevel% neq 0 (
    call :print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit /b 1
) else (
    call :print_success "–ö–æ—Ä–Ω–µ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
)

REM –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
call :print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
cd server
call npm install
cd ..
if %errorlevel% neq 0 (
    call :print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit /b 1
) else (
    call :print_success "–°–µ—Ä–≤–µ—Ä–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
)

REM –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
call :print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
cd client
call npm install
cd ..
if %errorlevel% neq 0 (
    call :print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit /b 1
) else (
    call :print_success "–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
)

REM –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
call :print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
cd mobile
call npm install
cd ..
if %errorlevel% neq 0 (
    call :print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–±–∏–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit /b 1
) else (
    call :print_success "–ú–æ–±–∏–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
)

goto :eof

REM –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
:setup_environment
call :print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

REM –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not exist .env (
    call :print_status "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    copy env.example .env >nul
    call :print_success ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
    call :print_warning "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
) else (
    call :print_success ".env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
)

REM –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
call :print_status "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
if not exist server\logs mkdir server\logs
if not exist server\data mkdir server\data
if not exist client\build mkdir client\build
if not exist mobile\android\app\build mkdir mobile\android\app\build

call :print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
goto :eof

REM –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MongoDB
:setup_mongodb
if "%DOCKER_AVAILABLE%"=="true" (
    call :print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ MongoDB —á–µ—Ä–µ–∑ Docker..."
    
    REM –ó–∞–ø—É—Å–∫ MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    docker run -d --name salanum-mongodb -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=secure_password_123 -e MONGO_INITDB_DATABASE=salanum mongo:6.0
    
    if %errorlevel% neq 0 (
        call :print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    ) else (
        call :print_success "MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
    )
) else (
    call :print_warning "Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MongoDB –≤—Ä—É—á–Ω—É—é"
)
goto :eof

REM –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
:setup_mobile
call :print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ React Native CLI
react-native --version >nul 2>&1
if %errorlevel% neq 0 (
    call :print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ React Native CLI..."
    call npm install -g react-native-cli
)

REM –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Android (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
adb version >nul 2>&1
if %errorlevel% neq 0 (
    call :print_warning "Android SDK –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Android Studio –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"
) else (
    call :print_success "Android SDK –æ–±–Ω–∞—Ä—É–∂–µ–Ω"
)

goto :eof

REM –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
:test_installation
call :print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."

REM –¢–µ—Å—Ç Node.js
node --version >nul 2>&1
if %errorlevel% neq 0 (
    call :print_error "Node.js –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    exit /b 1
) else (
    call :print_success "Node.js —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
)

REM –¢–µ—Å—Ç npm
npm --version >nul 2>&1
if %errorlevel% neq 0 (
    call :print_error "npm –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    exit /b 1
) else (
    call :print_success "npm —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
)

REM –¢–µ—Å—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
cd server
npm list >nul 2>&1
if %errorlevel% neq 0 (
    call :print_error "–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
    exit /b 1
) else (
    call :print_success "–°–µ—Ä–≤–µ—Ä–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
)
cd ..

REM –¢–µ—Å—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
cd client
npm list >nul 2>&1
if %errorlevel% neq 0 (
    call :print_error "–ü—Ä–æ–±–ª–µ–º—ã —Å –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
    exit /b 1
) else (
    call :print_success "–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
)
cd ..

goto :eof

REM –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
:start_application
call :print_status "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if not exist .env (
    call :print_error ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example"
    exit /b 1
)

call :print_success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo.
echo üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
echo    npm run dev          # –ó–∞–ø—É—Å–∫ –≤–µ–±-–≤–µ—Ä—Å–∏–∏
echo    npm run server       # –¢–æ–ª—å–∫–æ backend
echo    npm run client       # –¢–æ–ª—å–∫–æ frontend
echo.
echo üì± –î–ª—è –º–æ–±–∏–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:
echo    cd mobile
echo    npm run android      # Android
echo.
echo üê≥ –î–ª—è Docker:
echo    docker-compose -f docker-compose.keeper.yml up -d
echo.
echo üß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
echo    node test-keeper-final.js
echo.
echo üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
echo    README_FINAL.md
echo    INSTALLATION_GUIDE.md
echo    KEEPER_FINAL_INTEGRATION.md
goto :eof

REM –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
:main
echo –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Salanum...
echo.

call :check_dependencies
call :install_dependencies
call :setup_environment
call :setup_mongodb
call :setup_mobile

call :test_installation
if %errorlevel% neq 0 (
    call :print_error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏"
    exit /b 1
) else (
    call :start_application
)

goto :eof

REM –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
call :main

pause
