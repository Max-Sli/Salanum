#!/bin/bash

# Salanum - –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
echo "üß™ Salanum - –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
echo "================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_status() {
    echo -e "${BLUE}[TEST]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[PASS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

print_error() {
    echo -e "${RED}[FAIL]${NC} $1"
}

# –°—á–µ—Ç—á–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
run_test() {
    local test_name="$1"
    local test_command="$2"
    
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    print_status "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: $test_name"
    
    if eval "$test_command"; then
        print_success "$test_name"
        PASSED_TESTS=$((PASSED_TESTS + 1))
        return 0
    else
        print_error "$test_name"
        FAILED_TESTS=$((FAILED_TESTS + 1))
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
test_dependencies() {
    echo ""
    echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    echo "================================"
    
    run_test "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "node --version"
    run_test "npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "npm --version"
    run_test "Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "git --version"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
    NODE_VERSION=$(node --version | sed 's/v//')
    NODE_MAJOR=$(echo $NODE_VERSION | cut -d'.' -f1)
    if [ "$NODE_MAJOR" -ge 18 ]; then
        print_success "Node.js –≤–µ—Ä—Å–∏—è $NODE_VERSION (—Ç—Ä–µ–±—É–µ—Ç—Å—è 18+)"
    else
        print_error "Node.js –≤–µ—Ä—Å–∏—è $NODE_VERSION (—Ç—Ä–µ–±—É–µ—Ç—Å—è 18+)"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
test_server() {
    echo ""
    echo "üñ• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞..."
    echo "=========================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    run_test "–°–µ—Ä–≤–µ—Ä–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" "cd server && npm list > /dev/null 2>&1"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞
    run_test "–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f server/index.js"
    run_test "Keeper —Å–µ—Ä–≤–∏—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f server/services/KeeperFinal.js"
    run_test "API –º–∞—Ä—à—Ä—É—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç" "test -f server/routes/keeper-final.js"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    if [ -f .env ]; then
        print_success ".env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        print_warning ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω (—Å–æ–∑–¥–∞–π—Ç–µ –∏–∑ env.example)"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
test_client() {
    echo ""
    echo "üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞..."
    echo "=========================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    run_test "–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" "cd client && npm list > /dev/null 2>&1"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞
    run_test "–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∫–ª–∏–µ–Ω—Ç–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f client/src/App.js"
    run_test "Keeper –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f client/src/components/Keeper/KeeperIntegration.js"
    run_test "Auth –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç" "test -f client/src/components/Auth/Login.js"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json
    run_test "–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π package.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f client/package.json"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
test_mobile() {
    echo ""
    echo "üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    echo "======================================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    run_test "–ú–æ–±–∏–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" "cd mobile && npm list > /dev/null 2>&1"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    run_test "–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f mobile/App.js"
    run_test "Bluetooth —Å–µ—Ä–≤–∏—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f mobile/src/services/BluetoothService.js"
    run_test "Bluetooth —ç–∫—Ä–∞–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f mobile/src/screens/BluetoothScreen.js"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Android –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    run_test "Android –º–∞–Ω–∏—Ñ–µ—Å—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f mobile/android/app/src/main/AndroidManifest.xml"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ iOS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –Ω–∞ macOS)
    if [[ "$OSTYPE" == "darwin"* ]]; then
        run_test "iOS Info.plist —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f mobile/ios/SolanaMessenger/Info.plist"
    else
        print_warning "iOS —Ç–µ—Å—Ç—ã –ø—Ä–æ–ø—É—â–µ–Ω—ã (–Ω–µ macOS)"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –•—Ä–∞–Ω–∏—Ç–µ–ª—è
test_keeper() {
    echo ""
    echo "üîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –•—Ä–∞–Ω–∏—Ç–µ–ª—è..."
    echo "============================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –•—Ä–∞–Ω–∏—Ç–µ–ª—è
    run_test "KeeperFinal —Å–µ—Ä–≤–∏—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f server/services/KeeperFinal.js"
    run_test "–û—Ñ—Ñ–ª–∞–π–Ω —Å–µ—Ä–≤–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f server/keeper-offline-server.js"
    run_test "–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f test-keeper-final.js"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    run_test "Docker Compose —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f docker-compose.keeper.yml"
    run_test "Dockerfile –¥–ª—è Keeper —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f server/Dockerfile.keeper"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ healthcheck
    run_test "Healthcheck —Å–∫—Ä–∏–ø—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f server/healthcheck.js"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API (–µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω)
test_api() {
    echo ""
    echo "üîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
    echo "======================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
    if curl -s http://localhost:5000/api/health > /dev/null 2>&1; then
        print_success "–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000"
        
        # –¢–µ—Å—Ç health endpoint
        run_test "Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç" "curl -s http://localhost:5000/api/health | grep -q 'OK'"
        
        # –¢–µ—Å—Ç Keeper handshake
        run_test "Keeper handshake —Ä–∞–±–æ—Ç–∞–µ—Ç" "curl -s -X POST http://localhost:5000/api/keeper-final/handshake -H 'Content-Type: application/json' -d '{\"command\": \"handshake\", \"version\": \"0.1a\", \"user_id\": \"14\"}' | grep -q 'accepted'"
        
    else
        print_warning "–°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'npm run server' –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Docker
test_docker() {
    echo ""
    echo "üê≥ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Docker..."
    echo "========================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if command -v docker &> /dev/null; then
        run_test "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "docker --version"
        run_test "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "docker-compose --version"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        if docker ps | grep -q salanum; then
            print_success "Salanum –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
        else
            print_warning "Salanum –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'docker-compose -f docker-compose.keeper.yml up -d'"
        fi
    else
        print_warning "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
test_security() {
    echo ""
    echo "üõ° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
    echo "=============================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    if [ -f .env ]; then
        if grep -q "your-super-secret" .env; then
            print_warning ".env —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∏–º–µ—Ä—ã –∑–Ω–∞—á–µ–Ω–∏–π (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ)"
        else
            print_success ".env —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º
    run_test "–°–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞" "test -r server/index.js"
    run_test "–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞" "test -r client/src/App.js"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π –≤ –∫–æ–¥–µ
    if grep -r "sk-" server/ client/ mobile/ 2>/dev/null | grep -v node_modules | grep -v ".git"; then
        print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ –≤ –∫–æ–¥–µ"
    else
        print_success "–°–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–¥–µ"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
test_performance() {
    echo ""
    echo "‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
    echo "===================================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ node_modules
    if [ -d "node_modules" ]; then
        NODE_MODULES_SIZE=$(du -sh node_modules 2>/dev/null | cut -f1)
        print_success "–†–∞–∑–º–µ—Ä node_modules: $NODE_MODULES_SIZE"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    if command -v time &> /dev/null; then
        print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞
    fi
}

# –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –•—Ä–∞–Ω–∏—Ç–µ–ª—è
test_keeper_final() {
    echo ""
    echo "üîí –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –•—Ä–∞–Ω–∏—Ç–µ–ª—è..."
    echo "======================================"
    
    if [ -f "test-keeper-final.js" ]; then
        run_test "–§–∏–Ω–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –•—Ä–∞–Ω–∏—Ç–µ–ª—è" "node test-keeper-final.js"
    else
        print_error "–§–∞–π–ª test-keeper-final.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
generate_report() {
    echo ""
    echo "üìä –û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏"
    echo "======================="
    echo "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
    echo "–ü—Ä–æ—à–ª–æ: $PASSED_TESTS"
    echo "–ù–µ –ø—Ä–æ—à–ª–æ: $FAILED_TESTS"
    echo "–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: $(( (PASSED_TESTS * 100) / TOTAL_TESTS ))%"
    
    if [ $FAILED_TESTS -eq 0 ]; then
        echo ""
        print_success "üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!"
        return 0
    else
        echo ""
        print_error "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Salanum..."
    echo ""
    
    test_dependencies
    test_server
    test_client
    test_mobile
    test_keeper
    test_api
    test_docker
    test_security
    test_performance
    test_keeper_final
    
    generate_report
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
main "$@"
