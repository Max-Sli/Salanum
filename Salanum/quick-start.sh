#!/bin/bash

# Salanum - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫
echo "üöÄ Salanum - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫"
echo "============================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
check_env() {
    if [ ! -f .env ]; then
        print_warning ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        if [ -f env.example ]; then
            print_status "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –∏–∑ env.example..."
            cp env.example .env
            print_success ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
            print_warning "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
        else
            print_error "env.example —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            exit 1
        fi
    else
        print_success ".env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v node &> /dev/null; then
        print_error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v npm &> /dev/null; then
        print_error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    print_success "–û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
install_dependencies() {
    if [ ! -d "node_modules" ]; then
        print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        npm install
        if [ $? -eq 0 ]; then
            print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
            exit 1
        fi
    else
        print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
}

# –ó–∞–ø—É—Å–∫ MongoDB (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω Docker)
start_mongodb() {
    if command -v docker &> /dev/null; then
        print_status "–ó–∞–ø—É—Å–∫ MongoDB —á–µ—Ä–µ–∑ Docker..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        if docker ps | grep -q salanum-mongodb; then
            print_success "MongoDB —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
        else
            # –ó–∞–ø—É—Å–∫ MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            docker run -d \
                --name salanum-mongodb \
                -p 27017:27017 \
                -e MONGO_INITDB_ROOT_USERNAME=admin \
                -e MONGO_INITDB_ROOT_PASSWORD=secure_password_123 \
                -e MONGO_INITDB_DATABASE=salanum \
                mongo:6.0
            
            if [ $? -eq 0 ]; then
                print_success "MongoDB –∑–∞–ø—É—â–µ–Ω"
            else
                print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å MongoDB —á–µ—Ä–µ–∑ Docker"
            fi
        fi
    else
        print_warning "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ MongoDB –∑–∞–ø—É—â–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ"
    fi
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
start_server() {
    print_status "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ —Å–µ—Ä–≤–µ—Ä
    if curl -s http://localhost:5000/api/health > /dev/null 2>&1; then
        print_success "–°–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000"
    else
        print_status "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..."
        cd server
        npm start &
        SERVER_PID=$!
        cd ..
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
        print_status "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
        for i in {1..30}; do
            if curl -s http://localhost:5000/api/health > /dev/null 2>&1; then
                print_success "–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000"
                break
            fi
            sleep 1
        done
        
        if [ $i -eq 30 ]; then
            print_error "–°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 30 —Å–µ–∫—É–Ω–¥"
            exit 1
        fi
    fi
}

# –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞
start_client() {
    print_status "–ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –∫–ª–∏–µ–Ω—Ç
    if curl -s http://localhost:3000 > /dev/null 2>&1; then
        print_success "–ö–ª–∏–µ–Ω—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"
    else
        print_status "–ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..."
        cd client
        npm start &
        CLIENT_PID=$!
        cd ..
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞
        print_status "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞..."
        for i in {1..60}; do
            if curl -s http://localhost:3000 > /dev/null 2>&1; then
                print_success "–ö–ª–∏–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"
                break
            fi
            sleep 1
        done
        
        if [ $i -eq 60 ]; then
            print_error "–ö–ª–∏–µ–Ω—Ç –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 60 —Å–µ–∫—É–Ω–¥"
            exit 1
        fi
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –•—Ä–∞–Ω–∏—Ç–µ–ª—è
test_keeper() {
    print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –•—Ä–∞–Ω–∏—Ç–µ–ª—è..."
    
    if [ -f "test-keeper-final.js" ]; then
        node test-keeper-final.js
        if [ $? -eq 0 ]; then
            print_success "–¢–µ—Å—Ç—ã –•—Ä–∞–Ω–∏—Ç–µ–ª—è –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
        else
            print_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –•—Ä–∞–Ω–∏—Ç–µ–ª—è –Ω–µ –ø—Ä–æ—à–ª–∏"
        fi
    else
        print_warning "–§–∞–π–ª test-keeper-final.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
show_info() {
    echo ""
    echo "üéâ Salanum –∑–∞–ø—É—â–µ–Ω!"
    echo "=================="
    echo ""
    echo "üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:3000"
    echo "üñ• API —Å–µ—Ä–≤–µ—Ä: http://localhost:5000"
    echo "üîí Keeper API: http://localhost:5000/api/keeper-final"
    echo ""
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
    echo "   node test-keeper-final.js"
    echo ""
    echo "üì± –ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞:"
    echo "   cd mobile"
    echo "   npm run android  # Android"
    echo "   npm run ios      # iOS (—Ç–æ–ª—å–∫–æ –Ω–∞ macOS)"
    echo ""
    echo "üê≥ Docker:"
    echo "   docker-compose -f docker-compose.keeper.yml up -d"
    echo ""
    echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
    echo "   README_FINAL.md"
    echo "   INSTALLATION_GUIDE.md"
    echo "   KEEPER_FINAL_INTEGRATION.md"
    echo ""
    echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
cleanup() {
    echo ""
    print_status "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Salanum..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    if [ ! -z "$SERVER_PID" ]; then
        kill $SERVER_PID 2>/dev/null
    fi
    
    if [ ! -z "$CLIENT_PID" ]; then
        kill $CLIENT_PID 2>/dev/null
    fi
    
    print_success "Salanum –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 0
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ Salanum..."
    echo ""
    
    check_dependencies
    check_env
    install_dependencies
    start_mongodb
    start_server
    start_client
    test_keeper
    show_info
    
    # –û–∂–∏–¥–∞–Ω–∏–µ
    while true; do
        sleep 1
    done
}

# –ó–∞–ø—É—Å–∫
main "$@"
