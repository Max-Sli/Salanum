#!/bin/bash

# Salanum - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
echo "üîí Salanum - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo "======================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
check_os() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
    
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        OS="linux"
        print_success "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ Linux —Å–∏—Å—Ç–µ–º–∞"
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        OS="macos"
        print_success "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ macOS —Å–∏—Å—Ç–µ–º–∞"
    elif [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]]; then
        OS="windows"
        print_success "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ Windows —Å–∏—Å—Ç–µ–º–∞"
    else
        print_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $OSTYPE"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
    if command -v node &> /dev/null; then
        NODE_VERSION=$(node --version)
        print_success "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NODE_VERSION"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
        NODE_MAJOR=$(echo $NODE_VERSION | cut -d'.' -f1 | sed 's/v//')
        if [ "$NODE_MAJOR" -lt 18 ]; then
            print_error "–¢—Ä–µ–±—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 18 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $NODE_VERSION"
            exit 1
        fi
    else
        print_error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+ —Å https://nodejs.org/"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
    if command -v npm &> /dev/null; then
        NPM_VERSION=$(npm --version)
        print_success "npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NPM_VERSION"
    else
        print_error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
    if command -v git &> /dev/null; then
        GIT_VERSION=$(git --version)
        print_success "Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $GIT_VERSION"
    else
        print_error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git —Å https://git-scm.com/"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if command -v mongod &> /dev/null; then
        print_success "MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_warning "MongoDB –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if command -v docker &> /dev/null; then
        print_success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        DOCKER_AVAILABLE=true
    else
        print_warning "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
        DOCKER_AVAILABLE=false
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    npm install
    
    if [ $? -eq 0 ]; then
        print_success "–ö–æ—Ä–Ω–µ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    cd server
    npm install
    cd ..
    
    if [ $? -eq 0 ]; then
        print_success "–°–µ—Ä–≤–µ—Ä–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    cd client
    npm install
    cd ..
    
    if [ $? -eq 0 ]; then
        print_success "–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    cd mobile
    npm install
    cd ..
    
    if [ $? -eq 0 ]; then
        print_success "–ú–æ–±–∏–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–±–∏–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        exit 1
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_environment() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f .env ]; then
        print_status "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
        cp env.example .env
        print_success ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
        print_warning "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
    else
        print_success ".env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    mkdir -p server/logs
    mkdir -p server/data
    mkdir -p client/build
    mkdir -p mobile/android/app/build
    
    print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MongoDB
setup_mongodb() {
    if [ "$DOCKER_AVAILABLE" = true ]; then
        print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ MongoDB —á–µ—Ä–µ–∑ Docker..."
        
        # –ó–∞–ø—É—Å–∫ MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        docker run -d \
            --name salanum-mongodb \
            -p 27017:27017 \
            -e MONGO_INITDB_ROOT_USERNAME=admin \
            -e MONGO_INITDB_ROOT_PASSWORD=secure_password_123 \
            -e MONGO_INITDB_DATABASE=salanum \
            mongo:6.0
        
        if [ $? -eq 0 ]; then
            print_success "MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        else
            print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å MongoDB –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
        fi
    else
        print_warning "Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MongoDB –≤—Ä—É—á–Ω—É—é"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_mobile() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ React Native CLI
    if ! command -v react-native &> /dev/null; then
        print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ React Native CLI..."
        npm install -g react-native-cli
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Android (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    if command -v adb &> /dev/null; then
        print_success "Android SDK –æ–±–Ω–∞—Ä—É–∂–µ–Ω"
    else
        print_warning "Android SDK –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Android Studio –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ iOS (—Ç–æ–ª—å–∫–æ –Ω–∞ macOS)
    if [[ "$OS" == "macos" ]]; then
        if command -v xcodebuild &> /dev/null; then
            print_success "Xcode –æ–±–Ω–∞—Ä—É–∂–µ–Ω"
            
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ CocoaPods
            if ! command -v pod &> /dev/null; then
                print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ CocoaPods..."
                sudo gem install cocoapods
            fi
            
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ iOS –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ iOS –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
            cd mobile/ios
            pod install
            cd ../..
            
            if [ $? -eq 0 ]; then
                print_success "iOS –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            else
                print_warning "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ iOS –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
            fi
        else
            print_warning "Xcode –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Xcode –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ iOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"
        fi
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
test_installation() {
    print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    # –¢–µ—Å—Ç Node.js
    if node --version &> /dev/null; then
        print_success "Node.js —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        print_error "Node.js –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
    
    # –¢–µ—Å—Ç npm
    if npm --version &> /dev/null; then
        print_success "npm —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        print_error "npm –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
    
    # –¢–µ—Å—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    cd server
    if npm list &> /dev/null; then
        print_success "–°–µ—Ä–≤–µ—Ä–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        print_error "–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
        return 1
    fi
    cd ..
    
    # –¢–µ—Å—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    cd client
    if npm list &> /dev/null; then
        print_success "–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        print_error "–ü—Ä–æ–±–ª–µ–º—ã —Å –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
        return 1
    fi
    cd ..
    
    return 0
}

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
start_application() {
    print_status "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    if [ ! -f .env ]; then
        print_error ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example"
        exit 1
    fi
    
    print_success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "   npm run dev          # –ó–∞–ø—É—Å–∫ –≤–µ–±-–≤–µ—Ä—Å–∏–∏"
    echo "   npm run server       # –¢–æ–ª—å–∫–æ backend"
    echo "   npm run client       # –¢–æ–ª—å–∫–æ frontend"
    echo ""
    echo "üì± –î–ª—è –º–æ–±–∏–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:"
    echo "   cd mobile"
    echo "   npm run android      # Android"
    echo "   npm run ios          # iOS (—Ç–æ–ª—å–∫–æ –Ω–∞ macOS)"
    echo ""
    echo "üê≥ –î–ª—è Docker:"
    echo "   docker-compose -f docker-compose.keeper.yml up -d"
    echo ""
    echo "üß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    echo "   node test-keeper-final.js"
    echo ""
    echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
    echo "   README_FINAL.md"
    echo "   INSTALLATION_GUIDE.md"
    echo "   KEEPER_FINAL_INTEGRATION.md"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "–ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Salanum..."
    echo ""
    
    check_os
    check_dependencies
    install_dependencies
    setup_environment
    setup_mongodb
    setup_mobile
    
    if test_installation; then
        start_application
    else
        print_error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏"
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
